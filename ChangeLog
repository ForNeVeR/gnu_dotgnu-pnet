
2002-09-14  Rhys Weatherley  <rweather@southern-storm.com.au>

	* cscc/c/c_coerce.c (GetCoerceRules): don't strip off the
	function pointer prefix when checking for pointer coercions.

	* cscc/c/c_grammar.y (ProcessDeclaration): allow function
	types to be defined with "typedef".

2002-09-13  Rhys Weatherley  <rweather@southern-storm.com.au>

	* cscc/c/c_oper.tc: compare the element types in "==", not the
	whole types, to determine if we are comparing distinct types.

	* cscc/c/c_grammar.y: finalize the declaration specifier in a
	function definition prior to calling "CFunctionCreate", to prevent
	the return type defaulting to "int".

2002-09-12  Rhys Weatherley  <rweather@southern-storm.com.au>

	* support/file.c (ILSysIOOpen): bug in the conversion of
	file access modes from C#-style to POSIX-style.

2002-09-10  Rhys Weatherley  <rweather@southern-storm.com.au>

	* codegen/cg_coerce.h, codegen/cg_optable.c, cscc/csharp/cs_oper.tc:
	implicitly coerce zero to enumerated types in binary operators.

2002-09-09  Rhys Weatherley  <rweather@southern-storm.com.au>

	* codegen/cg_gen.c (ILGenGetParamInfo): resolve the method before
	looking for "ILParameter" blocks, because method references don't
	have such blocks associated with them.

2002-09-07  Rhys Weatherley  <rweather@southern-storm.com.au>

	* cscc/csharp/cs_const.tc, cscc/csharp/cs_lvalue.tc,
	cscc/csharp/cs_oper.tc, cscc/csharp/cs_semvalue.h: improve
	constant evaluation for operators.

	* cscc/csharp/cs_cast.tc: constant evaluation for cast operators.

2002-09-05  Rhys Weatherley  <rweather@southern-storm.com.au>

	* Makefile.am, configure.in, ilheader/.cvsignore, ilheader/Makefile.am,
	ilheader/ilheader.1, ilheader/ilheader.c: add the "ilheader" utility,
	which generates .h files from C# assemblies.

	* engine/layout.c: fix a reversed test in "ComputeInterfaceTable".

2002-09-03  Rhys Weatherley  <rweather@southern-storm.com.au>

	* ChangeLog, doc/ChangeLog-3: move the contents of "ChangeLog" to
	"doc/ChangeLog-3", because it was starting to get too big to manage.

	* cscc/csharp/Makefile.am, cscc/csharp/cs_attrs.c,
	cscc/csharp/cs_cast.tc, cscc/csharp/cs_const.tc,
	cscc/csharp/cs_decls.tc, cscc/csharp/cs_defs.tc,
	cscc/csharp/cs_invoke.tc, cscc/csharp/cs_lookup.c,
	cscc/csharp/cs_lvalue.tc, cscc/csharp/cs_misc.tc,
	cscc/csharp/cs_oper.tc, cscc/csharp/cs_semantics.tc,
	cscc/csharp/cs_semvalue.c, cscc/csharp/cs_semvalue.h,
	cscc/csharp/cs_stmt.tc, cscc/csharp/cs_types.tc: change the
	usage of the "CSSemValue" type so that it is accessed via macros
	instead of direct fields; this will make it easier to change the
	representation in the future.
