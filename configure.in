dnl Process this file with autoconf to produce a configure script.
AC_INIT(include/il_opcodes.h)

dnl Determine the build, host, and target system types.
AC_CANONICAL_SYSTEM

dnl Initialize automake.
AM_INIT_AUTOMAKE(pnet, 0.3.9)
AM_CONFIG_HEADER(include/il_config.h)
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PROG_YACC
AM_PROG_LEX
AC_PATH_PROG(TREECC, treecc,, ${prefix}/bin:$PATH)
if test -z "$TREECC" ; then
    echo "treecc is required to build and can be obtained from"
    echo "http://www.southern-storm.com.au"
    exit 1
fi

dnl Check for file extensions.
AC_EXEEXT
AC_OBJEXT

dnl The --without-libffi option can be used to disable libffi.
AC_ARG_WITH(libffi,
[  --without-libffi        disable libffi support],
[
	withffi=no
],
[
	case "$host" in
    	*-*-hpux*)		withffi=no ;;
		        *)		withffi=yes ;;
	esac
])

dnl This code was borrowed from "libgc" to test for the correct
dnl thread package to use, and to notify the garbage collector's
dnl "gc.h" file of the correct features to enable.  See the
dnl "libgc/configure.in" file for Copyright and other information.

AC_MSG_CHECKING([for threads package to use])
AC_ARG_ENABLE(threads, [  --enable-threads=TYPE   choose threading package],
  THREADS=$enableval,
  [ AC_MSG_CHECKING([for thread model used by GCC])
    THREADS=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`
    if test -z "$THREADS"; then
      THREADS=no
    fi
    AC_MSG_RESULT([$THREADS])])

dnl Force pthreads for GNU/Linux and win32 threads for Cygwin systems.
if test "$THREADS" = "no"; then
	case "$host" in
     	x86-*-linux* | ia64-*-linux* | i586-*-linux* | i686-*-linux*)
			THREADS=posix
			;;
     	*-*-linux*)
			THREADS=posix
			;;
		*-cygwin)
			THREADS=win32
			;;
	esac
fi

THREADLIBS=
case "$THREADS" in
 no | none | single)
    THREADS=none
    ;;
 posix | pthreads)
    THREADS=posix
    THREADLIBS=-lpthread
    case "$host" in
     x86-*-linux* | ia64-*-linux* | i586-*-linux* | i686-*-linux*)
	AC_DEFINE(GC_LINUX_THREADS)
	AC_DEFINE(_REENTRANT)
        if test "${enable_parallel_mark}"; then
	  AC_DEFINE(PARALLEL_MARK)
	fi
	AC_DEFINE(THREAD_LOCAL_ALLOC)
	;;
     *-*-linux*)
	AC_DEFINE(GC_LINUX_THREADS)
	AC_DEFINE(_REENTRANT)
	;;
     *-*-hpux*)
	AC_MSG_WARN("Only HP/UX 11 threads are supported.")
	AC_DEFINE(GC_HPUX_THREADS)
	AC_DEFINE(_POSIX_C_SOURCE,199506L)
	if test "${enable_parallel_mark}" = yes; then
	  AC_DEFINE(PARALLEL_MARK)
	fi
	AC_DEFINE(THREAD_LOCAL_ALLOC)
	THREADLIBS="-lpthread -lrt"
	;;
     *-*-freebsd*)
	AC_MSG_WARN("FreeBSD does not yet fully support threads with Boehm GC.")
	AC_DEFINE(GC_FREEBSD_THREADS)
	INCLUDES="$INCLUDES -pthread"
	THREADLIBS=-pthread
      	;;
     *-*-solaris*)
	AC_DEFINE(GC_SOLARIS_THREADS)
	AC_DEFINE(GC_SOLARIS_PTHREADS)
	;;
     *-*-irix*)
	AC_DEFINE(GC_IRIX_THREADS)
	;;
    esac
    ;;
 win32)
    AC_DEFINE(GC_WIN32_THREADS)
    ;;
 dgux386)
    THREADS=dgux386
    # Use pthread GCC  switch
    THREADLIBS=-pthread
    if test "${enable_parallel_mark}"; then
        AC_DEFINE(PARALLEL_MARK)
    fi
    AC_DEFINE(THREAD_LOCAL_ALLOC)
    AC_DEFINE(GC_DGUX386_THREADS)
    AC_DEFINE(DGUX_THREADS)
    # Enable _POSIX4A_DRAFT10_SOURCE with flag -pthread
    INCLUDES="-pthread $INCLUDES"
    ;;
 decosf1 | irix | mach | os2 | solaris | dce | vxworks)
    AC_MSG_ERROR(thread package $THREADS not yet supported)
    ;;
 *)
    AC_MSG_ERROR($THREADS is an unknown thread package)
    ;;
esac

dnl End of borrowed code.

dnl Checks for libraries.
AC_SUBST(REGEXLIBS)
AC_CHECK_LIB(m, sin)
AC_CHECK_LIB(dl, dlopen)
AC_CHECK_LIB(regex, regcomp, [REGEXLIBS=-lregex], [])

dnl Collect up the libraries that we need for GNU readline.
AC_SUBST(READLINELIBS)
READLINELIBS=""
AC_CHECK_LIB(termcap, tgoto, [READLINELIBS="$READLINELIBS -ltermcap"], [])
AC_CHECK_LIB(readline, readline, [AC_DEFINE(HAVE_LIBREADLINE)
READLINELIBS="-lreadline $READLINELIBS"], [], $READLINELIBS)
AC_CHECK_LIB(history, add_history, [AC_DEFINE(HAVE_LIBHISTORY)
READLINELIBS="-lhistory $READLINELIBS"], [])

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_TIME
AC_CHECK_HEADERS(string.h strings.h memory.h stdlib.h math.h fcntl.h)
AC_CHECK_HEADERS(stdarg.h varargs.h sys/mman.h unistd.h sys/stat.h)
AC_CHECK_HEADERS(sys/time.h sys/types.h regex.h dlfcn.h ieeefp.h)
AC_CHECK_HEADERS(readline/readline.h readline/history.h wchar.h)
AC_CHECK_HEADERS(sys/socket.h netinet/in.h langinfo.h locale.h)
AC_CHECK_HEADERS(sys/select.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long, 4)
AC_CHECK_SIZEOF(long long, 8)
AC_CHECK_SIZEOF(float, 4)
AC_CHECK_SIZEOF(double, 8)
AC_CHECK_SIZEOF(long double, 12)
AC_CHECK_SIZEOF(void *, 4)

dnl Check for computed goto support in the compiler.
AC_MSG_CHECKING(for computed goto support)
AC_TRY_COMPILE([], [
	static void *labels[] = {&&label0, &&label1, &&label2};
	unsigned char *pc = 0;
	goto *labels[*pc];
	label0: ;
	label1: ;
	label2: ;
], AC_DEFINE(HAVE_COMPUTED_GOTO) compgoto=yes, compgoto=no)
AC_MSG_RESULT($compgoto)
AC_MSG_CHECKING(for pic computed goto support)
AC_TRY_COMPILE([], [
	static int labelOffsets[] =
		{&&label0 - &&label0, &&label1 - &&label0, &&label2 - &&label0};
	unsigned char *pc = 0;
	goto *(&&label0 + labelOffsets[*pc]);
	label0: ;
	label1: ;
	label2: ;
], AC_DEFINE(HAVE_PIC_COMPUTED_GOTO) piccompgoto=yes, piccompgoto=no)
AC_MSG_RESULT($piccompgoto)

dnl Check to see if we are using gcc or not.
if test x$GCC = xyes ; then
	CFLAGS="$CFLAGS -Wall"
fi

dnl Check to see whether cc accepts "-no-cpp-precomp" or not.
AC_CACHE_CHECK(whether ${CC-cc} accepts -no-cpp-precomp, ac_cv_prog_cc_precomp,
[echo 'void f(){}' > conftest.c
if test -z "`${CC-cc} -no-cpp-precomp -c conftest.c 2>&1`"; then
  ac_cv_prog_cc_precomp=yes
else
  ac_cv_prog_cc_precomp=no
fi
rm -f conftest*
])
if test $ac_cv_prog_cc_precomp = yes ; then
	CFLAGS="$CFLAGS -no-cpp-precomp"
fi

dnl Check to see whether cc accepts "-fno-gcse" or not.
AC_SUBST(NO_GCSE)
AC_CACHE_CHECK(whether ${CC-cc} accepts -fno-gcse, ac_cv_prog_cc_no_gcse,
[echo 'void f(){}' > conftest.c
if test -z "`${CC-cc} -fno-gcse -c conftest.c 2>&1`"; then
  ac_cv_prog_cc_no_gcse=yes
else
  ac_cv_prog_cc_no_gcse=no
fi
rm -f conftest*
])
if test $ac_cv_prog_cc_no_gcse = yes ; then
	NO_GCSE="-fno-gcse"
else
	NO_GCSE=""
fi

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_CHECK_FUNCS(memset memcmp memchr memcpy memmove bcopy bzero bcmp)
AC_CHECK_FUNCS(isnan isinf finite fmod strtod mmap munmap getpagesize)
AC_CHECK_FUNCS(stat vfprintf waitpid wait fork execv open gettimeofday)
AC_CHECK_FUNCS(getpid qsort regcomp re_comp unlink remove getcwd getwd)
AC_CHECK_FUNCS(get_current_dir_name dlopen strerror fcntl ftruncate)
AC_CHECK_FUNCS(acos asin atan atan2 ceil cos cosh exp floor remainder)
AC_CHECK_FUNCS(log log10 pow rint sin sinh sqrt tan tanh)
AC_CHECK_FUNCS(wctomb wcrtomb mbtowc mbrtowc nl_langinfo setlocale)
AC_CHECK_FUNCS(usleep)
AC_FUNC_ALLOCA

dnl Add the thread libraries to the end of the link line.
LIBS="$LIBS $THREADLIBS"

dnl Set up libffi-related variables.
AC_SUBST(FFILIBS)
if test x$withffi = xyes ; then
	FFILIBS='$(top_builddir)/libffi/.libs/libffi.a'
	AC_DEFINE(HAVE_LIBFFI)
else
	FFILIBS=""
fi
AM_CONDITIONAL(USING_LIBFFI, test x$withffi = xyes)

AC_OUTPUT([
Makefile
include/Makefile
support/Makefile
image/Makefile
dumpasm/Makefile
engine/Makefile
ilasm/Makefile
ildasm/Makefile
ilalink/Makefile
ilsize/Makefile
ilnative/Makefile
ilfind/Makefile
ildiff/Makefile
codegen/Makefile
cscc/Makefile
cscc/common/Makefile
cscc/csharp/Makefile
resgen/Makefile
ildb/Makefile
csdoc/Makefile
csant/Makefile
samples/Makefile
doc/Makefile
tests/Makefile])

dnl Configure libffi and libgc.  We do these manually to avoid
dnl some issues with different versions of autotools, and so that
dnl we can pass specific options to the packages.
if test "x$no_recursion" != "xyes"; then
	if test x$withffi = xyes ; then
		cd "${srcdir}/libffi"
		./configure --disable-multilib --disable-shared
		cd ../libgc
	else
		cd "${srcdir}/libgc"
	fi
	./configure --enable-threads=$THREADS
fi
