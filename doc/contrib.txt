General guidelines to be used in contributions:
----------------------------------------------

1. Avoid native methods where possible.  If it can be implemented
   in bytecode, then do so.  Efficiency will be tackled later.

2. All strings that may be displayed to the user must be translatable
   using "Environment.GetResourceString(tag)".  Add the default values
   to the text files within "resources/en_US".  All resource files
   must use the UTF-8 encoding.

3. If you are modifying someone else's code, then use their white space
   and brace-placement conventions, even if you can't stand them.  That
   will prevent code degradation.

4. Some classes need private helper methods and classes in their
   implementation.  Within "runtime", these helpers should be placed
   into the "System.Private" namespace.  The classes in this namespace
   must always be declared "internal".  In other libraries, create a
   sub-namespace called "Private".  e.g. "System.XML.Private".

5. One file, one class.  C# doesn't strictly require this, but it makes
   it a lot easier to locate classes within the source tree.

6. If you need a new directory, then contact Rhys Weatherley before
   creating it, to ensure naming consistency across the directory tree.
   It is difficult to remove a directory from CVS that has been created
   in error.  Rhys can be e-mailed at rweather@southern-storm.com.au.

Recommended coding conventions:
------------------------------

The following are a guide only.  If you want to use a different style,
then that's OK, but please try to be consistent.

1. TAB's at 4.

2. Beginning braces on the next line, aligned with the statement.  e.g.

		if(blah)
		{
			...
		}
		else
		{
			...
		}

3. Method and class names begin with upper case.  Field, parameter
   and local variables begin with lower case.  Avoid hungarian
   notations such as "m_" for members.

4. At all times, be clear.  If you need to use tricky code, then
   comment it heavily.
